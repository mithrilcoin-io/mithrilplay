apply plugin: 'com.android.application'
import groovy.json.JsonSlurper

def debug_hostUrl = ""
def debug_prefKey = ""
def release_hostUrl = ""
def release_prefKey = ""

/*
Server host address and preference CRYPTOKEY stored in json format in \host.mithril

ex)
{
    "debug": {
      "hosturl": "http://***.***.io",
      "prefkey": "***************************************"
    },
     "release": {
      "hosturl": "http://***.***.io",
      "prefkey": "***************************************"
    }
}

*/

if(file('../host.mithril').exists()){
    File appInfo = file('../host.mithril')
    def json = new JsonSlurper().parseText(appInfo.text)
    debug_hostUrl= json.debug.hosturl
    debug_prefKey= json.debug.prefkey
    release_hostUrl= json.release.hosturl
    release_prefKey= json.release.prefkey
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.2"
    defaultConfig {
        applicationId "io.mithrilcoin.mithrilplay"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'HOST_SERVER', '\"' + debug_hostUrl + '\"'
            buildConfigField 'String', 'PREF_CRYPTOKEY', '\"' + debug_prefKey + '\"'
        }
        release {
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'HOST_SERVER', '\"' + release_hostUrl + '\"'
            buildConfigField 'String', 'PREF_CRYPTOKEY', '\"' + release_prefKey + '\"'
        }
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
        jumboMode true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

ext {
    roomVersion = '1.0.0'
    archLifecycleVersion = '1.1.0'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support:multidex-instrumentation:1.0.1'){
        exclude group: 'com.android.support', module: 'multidex'
    }
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'

    // fcm
    compile 'com.google.firebase:firebase-core:11.8.0'
    compile 'com.google.firebase:firebase-messaging:11.8.0'

    compile 'com.google.firebase:firebase-auth:11.8.0'
    compile 'com.google.android.gms:play-services-auth:11.8.0'


    // Room
    compile 'android.arch.persistence.room:runtime:1.0.0'
    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0'

    // Room components
//    implementation "android.arch.persistence.room:runtime:${roomVersion}"
//    annotationProcessor "android.arch.persistence.room:compiler:${roomVersion}"
//    androidTestImplementation "android.arch.persistence.room:testing:${roomVersion}"

    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:${archLifecycleVersion}"
    annotationProcessor "android.arch.lifecycle:compiler:${archLifecycleVersion}"

    // permission
    compile 'gun0912.ted:tedpermission:2.1.0'

    implementation project(':eos')
}

apply plugin: 'com.google.gms.google-services'
